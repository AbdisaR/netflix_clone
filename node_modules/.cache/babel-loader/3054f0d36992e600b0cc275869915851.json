{"ast":null,"code":"var _jsxFileName = \"/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchrequest,\n    isLargeRow\n  } = _ref;\n  const baseURL = \"https://image.tmdb.org/t/p/original\";\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    request();\n  }, [fetchrequest]);\n\n  async function request() {\n    const response = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n    const data = await response.json();\n    setMovies(data.results);\n    return data.results;\n  }\n\n  ;\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: isLargeRow ? \"row__image__large\" : \"row__image\",\n        src: `${baseURL}${isLargeRow ? image.poster_path : image.backdrop_path}`,\n        alt: image.name\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["useState","useEffect","YouTube","movieTrailer","Row","title","fetchrequest","isLargeRow","baseURL","movies","setMovies","request","response","fetch","data","json","results","handleClick","movie","trailerUrl","setTrailerUrl","name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log","opts","height","width","playerVars","autoplay","map","image","poster_path","backdrop_path","id"],"sources":["/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nfunction Row({title, fetchrequest , isLargeRow}){\n    const baseURL=\"https://image.tmdb.org/t/p/original\"\n    const [movies,setMovies]=useState([]);\n    useEffect(()=>{\n        request();\n    }, [fetchrequest]);\n\n  async function request() {\n\n        const response = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n        const data =await response.json();\n        setMovies(data.results);\n        return data.results;\n    };\n    const handleClick = (movie) => {\n        if(trailerUrl){\n            setTrailerUrl('');\n        }\n        else{\n            movieTrailer(movie?.name || \"\").then((url)=>{\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get(\"v\"));\n            }).catch((error)=>console.log(error));\n        }\n    }\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n return(\n    <div>\n        <h2>{title}</h2>\n        <div className=\"row\">{movies.map( image =>(\n            <img onClick={()=> handleClick(movie)} className={isLargeRow ? \"row__image__large\" : \"row__image\" } key={image.id} src={`${baseURL}${isLargeRow ? image.poster_path : image.backdrop_path}`} alt={image.name}/>\n        ))}\n        </div>\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n ); \n}\nexport default Row;\n"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AACA,SAASC,GAAT,OAAgD;EAAA;;EAAA,IAAnC;IAACC,KAAD;IAAQC,YAAR;IAAuBC;EAAvB,CAAmC;EAC5C,MAAMC,OAAO,GAAC,qCAAd;EACA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;EACAC,SAAS,CAAC,MAAI;IACVU,OAAO;EACV,CAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;;EAIF,eAAeK,OAAf,GAAyB;IAEnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BP,YAAa,EAA7C,CAA5B;IACA,MAAMQ,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;IACAL,SAAS,CAACI,IAAI,CAACE,OAAN,CAAT;IACA,OAAOF,IAAI,CAACE,OAAZ;EACH;;EAAA;;EACD,MAAMC,WAAW,GAAIC,KAAD,IAAW;IAC3B,IAAGC,UAAH,EAAc;MACVC,aAAa,CAAC,EAAD,CAAb;IACH,CAFD,MAGI;MACAjB,YAAY,CAAC,CAAAe,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,IAAP,KAAe,EAAhB,CAAZ,CAAgCC,IAAhC,CAAsCC,GAAD,IAAO;QACxC,MAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;QACAP,aAAa,CAACI,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;MACH,CAHD,EAGGC,KAHH,CAGUC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHlB;IAIH;EACJ,CAVD;;EAWA,MAAMG,IAAI,GAAG;IACTC,MAAM,EAAE,KADC;IAETC,KAAK,EAAE,MAFE;IAGTC,UAAU,EAAE;MACRC,QAAQ,EAAE;IADF;EAHH,CAAb;EAOH,oBACG;IAAA,wBACI;MAAA,UAAKhC;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,KAAf;MAAA,UAAsBI,MAAM,CAAC6B,GAAP,CAAYC,KAAK,iBACnC;QAAK,OAAO,EAAE,MAAKtB,WAAW,CAACC,KAAD,CAA9B;QAAuC,SAAS,EAAEX,UAAU,GAAG,mBAAH,GAAyB,YAArF;QAAmH,GAAG,EAAG,GAAEC,OAAQ,GAAED,UAAU,GAAGgC,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAA1L;QAA6L,GAAG,EAAEF,KAAK,CAAClB;MAAxM,GAAyGkB,KAAK,CAACG,EAA/G;QAAA;QAAA;QAAA;MAAA,QADkB;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFJ,EAMKvB,UAAU,iBAAI,QAAC,OAAD;MAAS,OAAO,EAAEA,UAAlB;MAA8B,IAAI,EAAEc;IAApC;MAAA;MAAA;MAAA;IAAA,QANnB;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAUA;;GA1CQ7B,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}