{"ast":null,"code":"var _jsxFileName = \"/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchrequest\n  } = _ref;\n  const baseURL = \"https://image.tmdb.org/t/p/original\";\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    request();\n  }, [fetchrequest]);\n\n  const request = async () => {\n    const reponse = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n    const data = await reponse.json();\n    setMovies(data.results);\n    return data.results;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), movies.map(src => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${baseURL}${src.backdrop_path}`\n    }, src.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["useState","useEffect","Row","title","fetchrequest","baseURL","movies","setMovies","request","reponse","fetch","data","json","results","map","src","backdrop_path","name"],"sources":["/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nfunction Row({title, fetchrequest}){\n    const baseURL=\"https://image.tmdb.org/t/p/original\"\n    const [movies,setMovies]=useState([]);\n    useEffect(()=>{\n        request();\n    }, [fetchrequest]);\n\n    const request = async() => {\n\n        const reponse = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n\n        const data =await reponse.json();\n        setMovies(data.results);\n        return data.results;\n\n\n    }\n return(\n    <div>\n        <h1>title</h1>\n        {movies.map( src =>(\n            <img src={`${baseURL}${src.backdrop_path}`} key={src.name}/>\n))}\n     \n    </div>\n ); \n}\nexport default Row;\n"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AACA,SAASC,GAAT,OAAmC;EAAA;;EAAA,IAAtB;IAACC,KAAD;IAAQC;EAAR,CAAsB;EAC/B,MAAMC,OAAO,GAAC,qCAAd;EACA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;EACAC,SAAS,CAAC,MAAI;IACVO,OAAO;EACV,CAFQ,EAEN,CAACJ,YAAD,CAFM,CAAT;;EAIA,MAAMI,OAAO,GAAG,YAAW;IAEvB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,YAAa,EAA7C,CAA3B;IAEA,MAAMO,IAAI,GAAE,MAAMF,OAAO,CAACG,IAAR,EAAlB;IACAL,SAAS,CAACI,IAAI,CAACE,OAAN,CAAT;IACA,OAAOF,IAAI,CAACE,OAAZ;EAGH,CATD;;EAUH,oBACG;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKP,MAAM,CAACQ,GAAP,CAAYC,GAAG,iBACZ;MAAK,GAAG,EAAG,GAAEV,OAAQ,GAAEU,GAAG,CAACC,aAAc;IAAzC,GAAiDD,GAAG,CAACE,IAArD;MAAA;MAAA;MAAA;IAAA,QADH,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AASA;;GA1BQf,G;;KAAAA,G;AA2BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}