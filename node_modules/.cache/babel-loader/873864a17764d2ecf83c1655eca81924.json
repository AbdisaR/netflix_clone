{"ast":null,"code":"var _jsxFileName = \"/home/av/Music/React/NexflixClone/netflix-clone/src/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport requests from './requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const baseURL = \"https://image.tmdb.org/t/p/original\";\n  const [movies, setMovie] = useState([]);\n  useEffect(() => {\n    fetchMovie();\n  }, []);\n\n  async function fetchMovie() {\n    const response = await fetch(`https://api.themoviedb.org/3${requests.fetchNetflixOriginals}`);\n    const data = await response.json();\n    const random = Math.floor(Math.random() * data.results.length);\n    setMovie(data.requests[random]);\n    return data.results[random];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `movies.${baseURL}${backdrop_path}`,\n      alt: movies.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Banner, \"7D7TBNGBisiTt3czoorP4YBKyog=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","requests","Banner","baseURL","movies","setMovie","fetchMovie","response","fetch","fetchNetflixOriginals","data","json","random","Math","floor","results","length","backdrop_path","name"],"sources":["/home/av/Music/React/NexflixClone/netflix-clone/src/Banner.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport requests from './requests'\nfunction Banner() {\n    const baseURL=\"https://image.tmdb.org/t/p/original\";\n    const [movies, setMovie]=useState([]);\n    useEffect(()=>{\n        fetchMovie();\n        \n        \n    },[]);\n\n    async function fetchMovie(){\n        const response= await fetch(`https://api.themoviedb.org/3${requests.fetchNetflixOriginals}`);\n        const data = await response.json();\n        const random = Math.floor(Math.random() * data.results.length);\n        setMovie(data.requests[random]);\n        return data.results[random];\n    }\n  return (\n    <header>\n        {\n            <img src={`movies.${baseURL}${backdrop_path}`} alt={movies.name}/>\n        }\n    </header>\n  )\n}\n\nexport default Banner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAMC,OAAO,GAAC,qCAAd;EACA,MAAM,CAACC,MAAD,EAASC,QAAT,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;EACAC,SAAS,CAAC,MAAI;IACVM,UAAU;EAGb,CAJQ,EAIP,EAJO,CAAT;;EAMA,eAAeA,UAAf,GAA2B;IACvB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAE,+BAA8BP,QAAQ,CAACQ,qBAAsB,EAA/D,CAA3B;IACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;IACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBF,IAAI,CAACK,OAAL,CAAaC,MAAxC,CAAf;IACAX,QAAQ,CAACK,IAAI,CAACT,QAAL,CAAcW,MAAd,CAAD,CAAR;IACA,OAAOF,IAAI,CAACK,OAAL,CAAaH,MAAb,CAAP;EACH;;EACH,oBACE;IAAA,uBAEQ;MAAK,GAAG,EAAG,UAAST,OAAQ,GAAEc,aAAc,EAA5C;MAA+C,GAAG,EAAEb,MAAM,CAACc;IAA3D;MAAA;MAAA;MAAA;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAvBQhB,M;;KAAAA,M;AAyBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}