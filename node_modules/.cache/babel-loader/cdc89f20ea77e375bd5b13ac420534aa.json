{"ast":null,"code":"var _jsxFileName = \"/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchrequest,\n    isLargeRow\n  } = _ref;\n  const baseURL = \"https://image.tmdb.org/t/p/original\";\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    request();\n  }, [fetchrequest]);\n\n  async function request() {\n    const reponse = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n    const data = await reponse.json();\n    setMovies(data.results);\n    return data.results;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: isLargeRow ? \"row__image_large\" : \"row\",\n        src: `${baseURL}${isLargeRow ? image.poster_path : image.backdrop_path}`,\n        alt: image.name\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["useState","useEffect","Row","title","fetchrequest","isLargeRow","baseURL","movies","setMovies","request","reponse","fetch","data","json","results","map","image","poster_path","backdrop_path","name","id"],"sources":["/home/av/Music/React/NexflixClone/netflix-clone/src/Row.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport './Row.css';\nfunction Row({title, fetchrequest , isLargeRow}){\n    const baseURL=\"https://image.tmdb.org/t/p/original\"\n    const [movies,setMovies]=useState([]);\n    useEffect(()=>{\n        request();\n    }, [fetchrequest]);\n\n  async function request() {\n\n        const reponse = await fetch(`https://api.themoviedb.org/3${fetchrequest}`);\n        const data =await reponse.json();\n        setMovies(data.results);\n        return data.results;\n    }\n return(\n    <div>\n        <h1>{title}</h1>\n        <div className=\"row\">{movies.map( image =>(\n            <img className={isLargeRow ? \"row__image_large\" : \"row\" } key={image.id} src={`${baseURL}${isLargeRow ? image.poster_path : image.backdrop_path}`} alt={image.name}/>\n        ))}</div>\n     \n    </div>\n ); \n}\nexport default Row;\n"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,WAAP;;;AACA,SAASC,GAAT,OAAgD;EAAA;;EAAA,IAAnC;IAACC,KAAD;IAAQC,YAAR;IAAuBC;EAAvB,CAAmC;EAC5C,MAAMC,OAAO,GAAC,qCAAd;EACA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;EACAC,SAAS,CAAC,MAAI;IACVQ,OAAO;EACV,CAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;;EAIF,eAAeK,OAAf,GAAyB;IAEnB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,+BAA8BP,YAAa,EAA7C,CAA3B;IACA,MAAMQ,IAAI,GAAE,MAAMF,OAAO,CAACG,IAAR,EAAlB;IACAL,SAAS,CAACI,IAAI,CAACE,OAAN,CAAT;IACA,OAAOF,IAAI,CAACE,OAAZ;EACH;;EACJ,oBACG;IAAA,wBACI;MAAA,UAAKX;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,KAAf;MAAA,UAAsBI,MAAM,CAACQ,GAAP,CAAYC,KAAK,iBACnC;QAAK,SAAS,EAAEX,UAAU,GAAG,kBAAH,GAAwB,KAAlD;QAAyE,GAAG,EAAG,GAAEC,OAAQ,GAAED,UAAU,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAAhJ;QAAmJ,GAAG,EAAEF,KAAK,CAACG;MAA9J,GAA+DH,KAAK,CAACI,EAArE;QAAA;QAAA;QAAA;MAAA,QADkB;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AASA;;GAvBQlB,G;;KAAAA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}